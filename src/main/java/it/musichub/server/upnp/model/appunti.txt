leggo il didl

cerco la creazione del rendererCommand e la implemento nel discoveryService



interfaccia:
setPlaylist(List<Song> songs)     -- non riproduce, setta solo la playlist
startPlaying()                    -- inizia a riprodurre la playlist (al suo interno chiama il commandPlay ecc..)


il rendererCommand (o qualcun altro?) deve gestire la riproduzione della playlist.. avrà tutta una serie di comandi sulla playlist (play, next, previous, setShuffle(boolean), setRepeat(off/song/all), clearPlaylist, addSong, removeSong...)



Il selectedDevice va a OFF -> renderedCommand.pause()
Il selectedDevice va a OFF -> renderedCommand.resume()
Cambio del selectedDevice -> distruzione del thread del rendererCommand e creazione di uno nuovo




un oggetto Playlist potrebbe esssere un iterator!
- deve fornire il successivo
- deve rispondere a dei comandi

al livello sopra ci sarà:
- getPlaylist() //per ottenere la playlist corrente
- setPlaylist(Playlist playlist) //per sostituire la playlist corrente con un'altra
- savePlaylist(String name); //ha senso salvare anche i dati come la currentPosition, i songPointers, e il random? per ora si?
- loadPlaylist(String name);


--------
TEST playlist

Interface vs Programmatic
(gli interface vanno forse messi da un'altra parte?? perchè devono controllare anche i comandi)

SHUFFLE: OFF, REPEAT: OFF
[next]
I: rimane all'ultimo elemento all'infinito
P: si ferma

SHUFFLE: ON, REPEAT: OFF
I: rimane fino all'ultimo elemento della lista random all'infinito
P: si ferma (dopo l'ultimo random)

SHUFFLE: OFF, REPEAT: TRACK
I: riparte dall'inizio (funziona come un Repeat: ALL)
P: ripete lo stesso brano

SHUFFLE: OFF, REPEAT: ALL
I: classico repeat all: riparte dall'inizio
P: classico repeat all: riparte dall'inizio

e se la playlist la faccio indipendente dal renderer? ma poi è unica?
1. indipendente e unica. avrei un solo puntatore. non me ne faccio nulla
2. dipendente dal renderer. gestione playlist indipendenti in caso di renderer multipli (sviluppo futuro)
-----------
/////esempio con BubbleUPNP e minimserver:
        
//        <?xml version="1.0" encoding="UTF-8"?>
//        <DIDL-Lite xmlns="urn:schemas-upnp-org:metadata-1-0/DIDL-Lite/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dlna="urn:schemas-dlna-org:metadata-1-0/" xmlns:pv="http://www.pv.com/pvns/" xmlns:sec="http://www.sec.co.kr/" xmlns:upnp="urn:schemas-upnp-org:metadata-1-0/upnp/">
//           <item id="0$=Artist$1314$items$*i3586" parentID="0$=Artist$1314$items" restricted="1">
//              <upnp:class>object.item.audioItem.musicTrack</upnp:class>
//              <dc:title>Summer of '69</dc:title>
//              <dc:creator>Bryan Adams</dc:creator>
//              <upnp:artist>Bryan Adams</upnp:artist>
//              <upnp:albumArtURI>http://192.168.1.30:9790/minimserver/*/music/MP3s/Pop/Bryan*20Adams*20-*20Summer*20of*20*2769.mp3/$!picture-1361-31291.jpg</upnp:albumArtURI>
//              <upnp:genre>Rock</upnp:genre>
//              <dc:date>1997-01-01</dc:date>
//              <upnp:album>MTV Unplugged</upnp:album>
//              <upnp:originalTrackNumber>1</upnp:originalTrackNumber>
//              <res protocolInfo="http-get:*:audio/mpeg:DLNA.ORG_PN=MP3;DLNA.ORG_OP=01;DLNA.ORG_FLAGS=01700000000000000000000000000000" bitrate="24000" sampleFrequency="44100" nrAudioChannels="2" size="5835548" duration="0:04:01.000">http://192.168.1.30:9790/minimserver/*/music/MP3s/Pop/Bryan*20Adams*20-*20Summer*20of*20*2769.mp3</res>
//           </item>
//        </DIDL-Lite>
-----------
IPOTESI
- playlist thread???? per tenere d'occhio il cambio di state e riprodurre l'elemento successivo?? (Observer)
  - e poi si distrugge a fine playlist??
 --> MMMH, NO THREAD!  
  

playListState: play, pause, stop //// in alternativa: playlistActive = active, unactive

commandStop --> setPlaylistState(stop)
commandPlay --> setPlaylistState(play)

playNext(): ottiene la next song della playlist e fa (stop??+)setURI+play


nel thread:
(dopo l'aggiornamento dello state tramite transportInfo)
handlePlaylist():
if playlist.hasNext() 
- if state==stop && playlistState==play //la canzone precedente è finita
  - playNext()
- x
XXXXXXXXXX


come creo un TrackMetadata da una Song??????????




Aggiunta:
GENA LastChange subscription: potrei intercettare gli STOP che non danno risultato NULL (quindi sono stati richiesti via telecomando?? VERIFICARE se funzionerebbe)

TODO: rivedere la ServiceFactory per autospegnersi in caso di eccezioni durante init/start
es. N:\ non accessibile, oppure porta del mediaserver già occupata da altra istanza
-----> qlcs fatto, ma decidere come fare per i controlli init!!! checkState? li tengo o li tolgo?
 - testare nel caso della porta occupata perchè non so se va.... non sembra interrompersi
 - e i caso configuration parametro required assente?


TODO: supporto per il play diretto da esterno:
ci vogliono dei test nel musichub.alexa:
- test connessione al ws rest (da fare appena attivato)
- test connessione al media server (per il play diretto su echo)

TODO: fare casi d'uso scritti con attori ecc..

TODO: parametri opzionali: STOP when starting, STOP when exiting, reconnect with previous device
TODO: vedere se è rispettato il concetto di "Waiting for previous renderer", ovvero all'avvio cerco il renderer precedente e lo autoseleziono come selectedDevice

TODO: come prove per la console di test, implementare le selezioni da lista 
es. list devices (ONLINE, SELECTED); select device 1; 
    list playlist; select song 2
